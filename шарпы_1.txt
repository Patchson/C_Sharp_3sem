1. Что такое .Net Framework и из чего он состоит?

обширный набор написанных фрагментов кода (созданный и поддерживающийся Microsoft), 
который программисты могут использовать, чтобы быстрее писать программы.

К примеру, .NET Framework берёт на себя все операции по отрисовке окон на экране. 
Программисту остаётся только вставить текст, продумать меню программы, задать поведение кнопок, 
когда на них нажимает пользователь и т.д.

Но .NET Framework — намного больше, чем просто набор дополнительного кода. 
Он включает в себя инструменты, призванные сократить время разработки и дополнительные API, 
которые программисты могут использовать для простого взаимодействия с такими сервисами как Windows Store. 
Вместо того чтобы вручную писать весь необходимый код для поддержки универсальной платформы Windows, 
можно воспользоваться .NET Framework:




2. Что такое CLR, FCL/BCL, CLI, IL?

https://www.russianblogs.com/article/58331088274/




3. Пояснить работу JIT-компилятора?

JIT читает байт-код из некоторых секторов (редко сразу из всех) и компилирует их в машинный код. 
Этим сектором может быть файл, функция или любой фрагмент кода. Единожды скомпилированный код 
может кэшироваться и в дальнейшем повторно использоваться без перекомпиляции.


4. Что такое CTS (Common Type System)?
5. Какие аспекты поведения определяет тип System.Object?
6. Что находится в mscorlib dll?
7. Что такое «сборка»? Из чего состоит сборка .NET?
8. Какие виды сборок существуют?
9. Что такое assembly manifest?
10.Что такое GAC?
11.Чем managed code отличается от unmanaged code
12.Как и для чего определен метод Main?
13.Варианты использования директивы using( using Directive ) в C#.
14.Как связаны между собой сборки и пространства имен?
15.Что такое примитивные типы данных? Перечислите их.
16.Что такое ссылочные типы? Какие типы относятся к ним?
17.Какие типы относятся к типам-значениям?







18. В чем отличие между ссылочными и значимыми типами данных?






19.Что такое упаковка и распаковка значимых типов?






20.В чем заключается разница между int и System.Int32? double и
System.Double и т.д.?

Разницы никакой, int и Int32 после компиляции в IL код станут одним и тем же. int это ключевое слово для c#, 
ровно как Integer для VisualBasic, но оба они представляют собой System.Int32.

int - примитив, доступный в компиляторе C#, в то время как Int32 является типом FCL и следовательно доступен для всех языков, 
соответствующих CLS.

В C# int - это simple type, алиаз System.Int32.

C# поддерживает обычный набор типов данных. Для каждого типа данных, который поддерживается C#, существует соответствующий 
тип .NET Common Language Runtime. Например, типу int соответствует тип System.Int32. Практически всегда можно использовать 
System.Int32 вместо int, но этого не рекомендуется делать, потому что в этом случае код становится более сложным для восприятия.

Просто, double - это алиас класса Double, т.е. в коде пишем double тоже что new System.Double





21.Для чего используется тип dynamic?

Ключевым моментом использования DLR в C# является применение типов dynamic. Это ключевое слово позволяет опустить 
проверку типов во время компиляции. Кроме того, объекты, объявленные как dynamic, могут в течение работы программы менять свой тип.



22.В чем заключается главное отличие между var и dynamic?

В случае ключевого слова var это будет первое присваивание значения переменной, обозначенной ключевым словом var. 
После этого присваивания изменить тип значения переменной нельзя. Однако в случае ключевого слова dynamic, 
тип переменной можно изменять после первого присваивания.



23.Что такое неявно типизированная переменная?

компилятору предоставляется возможность самому определить тип локальной переменной, исходя из значения, 
которым она инициализируется. Такая переменная называется неявно типизированной .




24.Для чего используют Nullable тип?






25.Как объявить строковый литерал? Какие операции можно
выполнять со строкой?






26.Какие есть способы для задания и инициализации строк?






27.Какие методы есть у типа String?
Compare()
CompareOrdinal()
CompareTo()	
Equals()
Concat()
Contains()
IndexOf()
Split
Remove()
Replace()
ToUpper()
ToLower()





28.В чем отличие пустой и null строки?
null - отдельный тип

пустая строка - string



29.Как можно выполнить сравнение строк?

String.Compare	Сравнивает значения двух строк. Возвращает целочисленное значение.
String.CompareOrdinal	Сравнивает две строки без учета локального языка и региональных параметров. Возвращает целочисленное значение.
String.CompareTo	Сравнивает текущий строковый объект с другой строкой. Возвращает целочисленное значение.
String.StartsWith	Определяет, начинается ли строка с переданной строки. Возвращает логическое значение.
String.EndsWith	Определяет, заканчивается ли строка переданной строкой. Возвращает логическое значение.
String.Contains	Определяет, встречается ли символ или строка в другой строке. Возвращает логическое значение.
String.Equals	Определяет, совпадают ли две строки. Возвращает логическое значение.
String.IndexOf	Возвращает индекс позиции символа или строки начиная с начала проверяемой строки. Возвращает целочисленное значение.
String.LastIndexOf	Возвращает индекс позиции символа или строки начиная с конца проверяемой строки. Возвращает целочисленное значение.



30.В чем отличие типов String и StringBuilder?

В отличие от типа string, в классе StringBuilder можно изменять отдельный символ по его индексу. Например. 
// Изменить отдельный символ строки можно в отличие 
от типа String StringBuilder sb = new StringBuilder("Text."); sb[0] = 'N'; Console.




31.Поясните явные преобразования переменных с помощью команд Convert.



32.Как выполнить консольный ввод/вывод?

Console.WriteLine.

Console.ReadLine().





33.Приведите примеры определения и инициализации одномерных и
двумерных массивов.






34.Что такое ступенчатый массив? Как его задать?

Ступенчатый массив представляет собой массив массивов, в котором длина каждого массива может быть разной. 
Следовательно, ступенчатый массив может быть использован для составления таблицы из строк разной длины. 
Ступенчатые массивы объявляются с помощью ряда квадратных скобок, в которых указывается их размерность.



35.Какие типы можно использовать в foreach? Приведите пример.

Можно использовать типы, которые реализуют интерфейс System. Collections. IEnumerable или System.



36.Что такое кортеж? Для чего и как он используется?

Кортеж представляет набор значений, заключенных в круглые скобки



37.Что такое локальная функция? Какова область ее видимости?

Локальные функции представляют функции, определенные внутри других методов. Локальная функция, как правило, 
содержит действия, которые применяются только в рамках ее метода.

38. В чем разница между кодом, заключенным в блок checked и кодом,
заключенным в блок unchecked?

Так, если требуется указать, что выражение будет проверяться на переполнение, следует использовать 
ключевое слово checked, а если требуется проигнорировать переполнение — ключевое слово unchecked.


39.Какой контекст (checked/unchecked) применяется по умолчанию?
Как можно переопределить это поведение?



40.Для чего используется ключевое слово fixed? Каковы особенности
его использования?

Ключевое fixed слово позволяет закрепить локальный элемент в стеке, чтобы предотвратить его сбор или 
перемещение во время сборки мусора. Он используется для низкоуровневых сценариев программирования.